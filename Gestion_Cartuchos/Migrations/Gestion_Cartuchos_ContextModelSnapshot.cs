// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace Gestion_Cartuchos.Migrations
{
    [DbContext(typeof(Gestion_Cartuchos_Context))]
    partial class Gestion_Cartuchos_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Models.Asignar_Impresora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("cartuchoId")
                        .HasColumnType("int");

                    b.Property<int>("cartucho_id")
                        .HasColumnType("int");

                    b.Property<DateOnly>("fecha_asignacion")
                        .HasColumnType("date");

                    b.Property<DateOnly>("fecha_desasignacion")
                        .HasColumnType("date");

                    b.Property<int>("impresoraId")
                        .HasColumnType("int");

                    b.Property<int>("impresora_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("cartuchoId");

                    b.HasIndex("impresoraId");

                    b.ToTable("Asignar_Impresoras");
                });

            modelBuilder.Entity("Models.Cartucho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("cantidad_recargas")
                        .HasColumnType("int");

                    b.Property<int>("estadoId")
                        .HasColumnType("int");

                    b.Property<int>("estado_id")
                        .HasColumnType("int");

                    b.Property<DateOnly>("fecha_alta")
                        .HasColumnType("date");

                    b.Property<int>("modeloId")
                        .HasColumnType("int");

                    b.Property<int>("modelo_id")
                        .HasColumnType("int");

                    b.Property<string>("numero_serie")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("observaciones")
                        .HasColumnType("longtext");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("estadoId");

                    b.HasIndex("modeloId");

                    b.ToTable("Cartuchos");
                });

            modelBuilder.Entity("Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Models.Impresora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Impresoras");
                });

            modelBuilder.Entity("Models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("modelo_cartuchos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("Models.Oficina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Oficinas");
                });

            modelBuilder.Entity("Models.Recargas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("cartuchoId")
                        .HasColumnType("int");

                    b.Property<int>("cartucho_id")
                        .HasColumnType("int");

                    b.Property<DateOnly>("fecha_recarga")
                        .HasColumnType("date");

                    b.Property<string>("observaciones")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("cartuchoId");

                    b.ToTable("Recargas");
                });

            modelBuilder.Entity("Models.Asignar_Impresora", b =>
                {
                    b.HasOne("Models.Cartucho", "cartucho")
                        .WithMany()
                        .HasForeignKey("cartuchoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Impresora", "impresora")
                        .WithMany()
                        .HasForeignKey("impresoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cartucho");

                    b.Navigation("impresora");
                });

            modelBuilder.Entity("Models.Cartucho", b =>
                {
                    b.HasOne("Models.Estado", "estado")
                        .WithMany()
                        .HasForeignKey("estadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Modelo", "modelo")
                        .WithMany()
                        .HasForeignKey("modeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("estado");

                    b.Navigation("modelo");
                });

            modelBuilder.Entity("Models.Recargas", b =>
                {
                    b.HasOne("Models.Cartucho", "cartucho")
                        .WithMany()
                        .HasForeignKey("cartuchoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cartucho");
                });
#pragma warning restore 612, 618
        }
    }
}
